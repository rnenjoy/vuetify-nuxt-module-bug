import { _nullishCoalesce, _optionalChain } from '@sentry/utils';
import { sentryVitePlugin } from '@sentry/vite-plugin';

/**
 *  Setup source maps for Sentry inside the Nuxt module during build time.
 */
function setupSourceMaps(moduleOptions, nuxt) {
  nuxt.hook('vite:extendConfig', async (viteInlineConfig, _env) => {
    const sourceMapsUploadOptions = moduleOptions.sourceMapsUploadOptions || {};

    if ((_nullishCoalesce(sourceMapsUploadOptions.enabled, () => ( true))) && viteInlineConfig.mode !== 'development') {
      const sentryPlugin = sentryVitePlugin({
        org: _nullishCoalesce(sourceMapsUploadOptions.org, () => ( process.env.SENTRY_ORG)),
        project: _nullishCoalesce(sourceMapsUploadOptions.project, () => ( process.env.SENTRY_PROJECT)),
        authToken: _nullishCoalesce(sourceMapsUploadOptions.authToken, () => ( process.env.SENTRY_AUTH_TOKEN)),
        telemetry: _nullishCoalesce(sourceMapsUploadOptions.telemetry, () => ( true)),
        sourcemaps: {
          assets: _nullishCoalesce(_optionalChain([sourceMapsUploadOptions, 'access', _ => _.sourcemaps, 'optionalAccess', _2 => _2.assets]), () => ( undefined)),
          ignore: _nullishCoalesce(_optionalChain([sourceMapsUploadOptions, 'access', _3 => _3.sourcemaps, 'optionalAccess', _4 => _4.ignore]), () => ( undefined)),
          filesToDeleteAfterUpload: _nullishCoalesce(_optionalChain([sourceMapsUploadOptions, 'access', _5 => _5.sourcemaps, 'optionalAccess', _6 => _6.filesToDeleteAfterUpload]), () => ( undefined)),
        },
        _metaOptions: {
          telemetry: {
            metaFramework: 'nuxt',
          },
        },
        debug: _nullishCoalesce(moduleOptions.debug, () => ( false)),
      });

      viteInlineConfig.plugins = viteInlineConfig.plugins || [];
      viteInlineConfig.plugins.push(sentryPlugin);

      const sourceMapsPreviouslyEnabled = _optionalChain([viteInlineConfig, 'access', _7 => _7.build, 'optionalAccess', _8 => _8.sourcemap]);

      if (moduleOptions.debug && !sourceMapsPreviouslyEnabled) {
        // eslint-disable-next-line no-console
        console.log('[Sentry]: Enabled source maps generation in the Vite build options.');
        if (!_optionalChain([moduleOptions, 'access', _9 => _9.sourceMapsUploadOptions, 'optionalAccess', _10 => _10.sourcemaps, 'optionalAccess', _11 => _11.filesToDeleteAfterUpload])) {
          // eslint-disable-next-line no-console
          console.warn(
            `[Sentry] We recommend setting the \`sourceMapsUploadOptions.sourcemaps.filesToDeleteAfterUpload\` option to clean up source maps after uploading.
[Sentry] Otherwise, source maps might be deployed to production, depending on your configuration`,
          );
        }
      }

      viteInlineConfig.build = viteInlineConfig.build || {};
      viteInlineConfig.build.sourcemap = true;
    }
  });
}

export { setupSourceMaps };
//# sourceMappingURL=sourceMaps.js.map
