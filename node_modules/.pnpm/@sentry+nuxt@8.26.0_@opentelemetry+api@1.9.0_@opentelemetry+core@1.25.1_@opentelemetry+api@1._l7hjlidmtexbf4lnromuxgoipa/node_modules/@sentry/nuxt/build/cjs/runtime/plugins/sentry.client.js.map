{"version":3,"file":"sentry.client.js","sources":["../../../../src/runtime/plugins/sentry.client.ts"],"sourcesContent":["import { getClient } from '@sentry/core';\nimport { browserTracingIntegration, vueIntegration } from '@sentry/vue';\nimport { defineNuxtPlugin } from 'nuxt/app';\n\n// --- Types are copied from @sentry/vue (so it does not need to be exported) ---\n// The following type is an intersection of the Route type from VueRouter v2, v3, and v4.\n// This is not great, but kinda necessary to make it work with all versions at the same time.\ntype Route = {\n  /** Unparameterized URL */\n  path: string;\n  /**\n   * Query params (keys map to null when there is no value associated, e.g. \"?foo\" and to an array when there are\n   * multiple query params that have the same key, e.g. \"?foo&foo=bar\")\n   */\n  query: Record<string, string | null | (string | null)[]>;\n  /** Route name (VueRouter provides a way to give routes individual names) */\n  name?: string | symbol | null | undefined;\n  /** Evaluated parameters */\n  params: Record<string, string | string[]>;\n  /** All the matched route objects as defined in VueRouter constructor */\n  matched: { path: string }[];\n};\n\ninterface VueRouter {\n  onError: (fn: (err: Error) => void) => void;\n  beforeEach: (fn: (to: Route, from: Route, next?: () => void) => void) => void;\n}\n\n// Tree-shakable guard to remove all code related to tracing\ndeclare const __SENTRY_TRACING__: boolean;\n\nexport default defineNuxtPlugin(nuxtApp => {\n  // This evaluates to true unless __SENTRY_TRACING__ is text-replaced with \"false\", in which case everything inside\n  // will get tree-shaken away\n  if (typeof __SENTRY_TRACING__ === 'undefined' || __SENTRY_TRACING__) {\n    const sentryClient = getClient();\n\n    if (sentryClient && '$router' in nuxtApp) {\n      sentryClient.addIntegration(\n        browserTracingIntegration({ router: nuxtApp.$router as VueRouter, routeLabel: 'path' }),\n      );\n    }\n  }\n\n  nuxtApp.hook('app:created', vueApp => {\n    const sentryClient = getClient();\n\n    if (sentryClient) {\n      sentryClient.addIntegration(vueIntegration({ app: vueApp }));\n    }\n  });\n});\n"],"names":["defineNuxtPlugin","getClient","browserTracingIntegration","vueIntegration"],"mappings":";;;;AAIA;AACA;AACA;;AAyBA,sBAAeA,oBAAgB,CAAC,OAAA,IAAW;AAC3C;AACA;AACA,EAAE,IAAI,OAAO,kBAAA,KAAuB,WAAY,IAAG,kBAAkB,EAAE;AACvE,IAAI,MAAM,YAAA,GAAeC,cAAS,EAAE,CAAA;AACpC;AACA,IAAI,IAAI,YAAA,IAAgB,SAAU,IAAG,OAAO,EAAE;AAC9C,MAAM,YAAY,CAAC,cAAc;AACjC,QAAQC,6BAAyB,CAAC,EAAE,MAAM,EAAE,OAAO,CAAC,OAAA,GAAsB,UAAU,EAAE,MAAA,EAAQ,CAAC;AAC/F,OAAO,CAAA;AACP,KAAI;AACJ,GAAE;AACF;AACA,EAAE,OAAO,CAAC,IAAI,CAAC,aAAa,EAAE,UAAU;AACxC,IAAI,MAAM,YAAA,GAAeD,cAAS,EAAE,CAAA;AACpC;AACA,IAAI,IAAI,YAAY,EAAE;AACtB,MAAM,YAAY,CAAC,cAAc,CAACE,kBAAc,CAAC,EAAE,GAAG,EAAE,MAAA,EAAQ,CAAC,CAAC,CAAA;AAClE,KAAI;AACJ,GAAG,CAAC,CAAA;AACJ,CAAC,CAAC;;;;"}