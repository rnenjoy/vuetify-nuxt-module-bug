import * as Sentry from "@sentry/node";
import { H3Error } from "h3";
import { defineNitroPlugin } from "nitropack/runtime";
import { addSentryTracingMetaTags, extractErrorContext } from "../utils.js";
export default defineNitroPlugin((nitroApp) => {
  nitroApp.hooks.hook("error", (error, errorContext) => {
    if (error instanceof H3Error) {
      if (error.statusCode >= 300 && error.statusCode < 500) {
        return;
      }
    }
    const { method, path } = {
      method: errorContext.event && errorContext.event._method ? errorContext.event._method : "",
      path: errorContext.event && errorContext.event._path ? errorContext.event._path : null
    };
    if (path) {
      Sentry.getCurrentScope().setTransactionName(`${method} ${path}`);
    }
    const structuredContext = extractErrorContext(errorContext);
    Sentry.captureException(error, {
      captureContext: { contexts: { nuxt: structuredContext } },
      mechanism: { handled: false }
    });
  });
  nitroApp.hooks.hook("render:html", (html) => {
    addSentryTracingMetaTags(html.head);
  });
});
