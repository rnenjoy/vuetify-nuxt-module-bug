{"version":3,"file":"sentry.server.js","sources":["../../../../src/runtime/plugins/sentry.server.ts"],"sourcesContent":["import { captureException } from '@sentry/node';\nimport { H3Error } from 'h3';\nimport { defineNitroPlugin } from 'nitropack/runtime';\nimport type { NuxtRenderHTMLContext } from 'nuxt/app';\nimport { addSentryTracingMetaTags, extractErrorContext } from '../utils';\n\nexport default defineNitroPlugin(nitroApp => {\n  nitroApp.hooks.hook('error', (error, errorContext) => {\n    // Do not handle 404 and 422\n    if (error instanceof H3Error) {\n      // Do not report if status code is 3xx or 4xx\n      if (error.statusCode >= 300 && error.statusCode < 500) {\n        return;\n      }\n    }\n\n    const structuredContext = extractErrorContext(errorContext);\n\n    captureException(error, {\n      captureContext: { contexts: { nuxt: structuredContext } },\n      mechanism: { handled: false },\n    });\n  });\n\n  // @ts-expect-error - 'render:html' is a valid hook name in the Nuxt context\n  nitroApp.hooks.hook('render:html', (html: NuxtRenderHTMLContext) => {\n    addSentryTracingMetaTags(html.head);\n  });\n});\n"],"names":[],"mappings":";;;;;AAMA,sBAAe,iBAAiB,CAAC,QAAA,IAAY;AAC7C,EAAE,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC,KAAK,EAAE,YAAY,KAAK;AACxD;AACA,IAAI,IAAI,KAAM,YAAW,OAAO,EAAE;AAClC;AACA,MAAM,IAAI,KAAK,CAAC,UAAW,IAAG,GAAI,IAAG,KAAK,CAAC,UAAW,GAAE,GAAG,EAAE;AAC7D,QAAQ,OAAM;AACd,OAAM;AACN,KAAI;AACJ;AACA,IAAI,MAAM,iBAAkB,GAAE,mBAAmB,CAAC,YAAY,CAAC,CAAA;AAC/D;AACA,IAAI,gBAAgB,CAAC,KAAK,EAAE;AAC5B,MAAM,cAAc,EAAE,EAAE,QAAQ,EAAE,EAAE,IAAI,EAAE,iBAAkB,EAAA,EAAG;AAC/D,MAAM,SAAS,EAAE,EAAE,OAAO,EAAE,OAAO;AACnC,KAAK,CAAC,CAAA;AACN,GAAG,CAAC,CAAA;AACJ;AACA;AACA,EAAE,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,aAAa,EAAE,CAAC,IAAI,KAA4B;AACtE,IAAI,wBAAwB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAA;AACvC,GAAG,CAAC,CAAA;AACJ,CAAC,CAAC;;;;"}