var {
  _optionalChain
} = require('@sentry/utils');

Object.defineProperty(exports, '__esModule', { value: true });

const core = require('@sentry/core');
const node = require('@sentry/node');
const utils = require('@sentry/utils');
const debugBuild = require('../common/debug-build.js');

/**
 * Initializes the server-side of the Nuxt SDK
 *
 * @param options Configuration options for the SDK.
 */
function init(options) {
  const sentryOptions = {
    ...options,
  };

  core.applySdkMetadata(sentryOptions, 'nuxt', ['nuxt', 'node']);

  const client = node.init(sentryOptions);

  core.getGlobalScope().addEventProcessor(
    Object.assign(
      (event => {
        if (event.type === 'transaction') {
          // Filter out transactions for Nuxt build assets
          // This regex matches the default path to the nuxt-generated build assets (`_nuxt`).
          // todo: the buildAssetDir could be changed in the nuxt config - change this to a more generic solution
          if (_optionalChain([event, 'access', _ => _.transaction, 'optionalAccess', _2 => _2.match, 'call', _3 => _3(/^GET \/_nuxt\//)])) {
            options.debug &&
              debugBuild.DEBUG_BUILD &&
              utils.logger.log('NuxtLowQualityTransactionsFilter filtered transaction: ', event.transaction);
            return null;
          }

          return event;
        } else {
          return event;
        }
      }) ,
      { id: 'NuxtLowQualityTransactionsFilter' },
    ),
  );

  return client;
}

exports.init = init;
//# sourceMappingURL=sdk.js.map
